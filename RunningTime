import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'runningTime' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int runningTime(List<Integer> arr) {
    // Write your code here
    
    //Go thru the list and place each number in a 
    int n = arr.get(index)
    
//Keep track of how many spaces a number has to move when going through the list to be added up together at the end.

    int counter = 0; 
    
        //Go thru the array checking the first two numbers and make sure they are in increasing order
        for (int i = 0; i < arr.size(); i++) {
    //The number in the 0 index must be greater or equaled to the next number
            x = Index
            if (i[x] >= i[x+1]){
                return arr;
            }
    //And if it is not equal or greater than, move the number too the right for
            else if {(i[x] < i[x+1])
                arr.get(i[x])
            }
//And if it is not less than or greater than, move the number too the right 
        while
            boolean (List[i] <= List[i - 1]) == true;
        }
        return Result; 
        }     
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrTemp[i]);
            arr.add(arrItem);
        }

        int result = Result.runningTime(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
